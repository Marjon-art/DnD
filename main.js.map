{"version":3,"file":"main.js","mappings":"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","sources":["webpack://DnD/./src/js/Task.js","webpack://DnD/./src/js/app.js"],"sourcesContent":["export default class Task {\n  constructor(container, headerText) {\n    this.container = container;\n\n    const tasks = document.createElement('div');\n    tasks.classList.add('container-task');\n    container.append(tasks);\n\n    const header = document.createElement('div');\n    header.classList.add('tasks_header');\n    tasks.append(header);\n\n    const tasksHeaderText = document.createElement('h4');\n    tasksHeaderText.classList.add('tasks_header_text');\n    tasksHeaderText.textContent = headerText;\n    header.append(tasksHeaderText);\n\n    const optionsBtn = document.createElement('span');\n    optionsBtn.classList.add('task_header_options');\n    optionsBtn.textContent = '...';\n    header.append(optionsBtn);\n\n    const taskList = document.createElement('div');\n    taskList.classList.add('task_list');\n    tasks.append(taskList);\n\n    const addedCard = document.createElement('div');\n    addedCard.classList.add('added_card');\n    addedCard.textContent = '+ Add another card';\n    tasks.append(addedCard);\n\n    addedCard.addEventListener('click', (e) => this.onAddCardClick(e));\n\n    taskList.addEventListener('mousedown', (e) => this.onMouseDownTask(e));\n\n    this.tasks = tasks;\n    this.taskList = taskList;\n    this.addedCard = addedCard;\n\n    this.drag = null;\n    this.startX = 0;\n    this.startY = 0;\n  }\n\n  onMouseDownTask(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) return;\n\n    const actualElement = e.target;\n\n    if (!actualElement.classList.contains('task_card')) {\n      return;\n    }\n\n    this.drag = actualElement;\n\n    const rect = this.drag.getBoundingClientRect();\n    this.startX = e.clientX - rect.left;\n    this.startY = e.clientY - rect.top;\n\n    this.previousNeighbour = this.drag.previousElementSibling;\n    this.nextNeighbour = this.drag.nextElementSibling;\n\n    this.placeholder = document.createElement('div');\n    this.placeholder.style.width = `${this.drag.offsetWidth}px`;\n    this.placeholder.style.height = `${this.drag.offsetHeight}px`;\n    this.drag.parentNode.insertBefore(this.placeholder, this.drag);\n\n    this.drag.classList.add('drag');\n\n    this.drag.style.left = `${rect.left}px`;\n    this.drag.style.top = `${rect.top}px`;\n    this.drag.style.width = `${rect.width}px`;\n\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    document.documentElement.addEventListener('mouseup', this.onMouseUp);\n    document.documentElement.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    if (!this.drag) return;\n\n    const posX = e.clientX - this.startX;\n    const posY = e.clientY - this.startY;\n    this.drag.style.left = `${posX}px`;\n    this.drag.style.top = `${posY}px`;\n\n    const { target } = e;\n    if (target.classList.contains('task_card')) {\n      const rect = target.getBoundingClientRect();\n      const dropY = e.clientY - rect.top;\n      if (dropY > rect.height / 2) {\n        target.parentNode.insertBefore(this.placeholder, target.nextSibling);\n      } else {\n        target.parentNode.insertBefore(this.placeholder, target);\n      }\n    }\n  }\n\n  onMouseUp(e) {\n    if (!this.drag) return;\n\n    this.drag.style = undefined;\n\n    const { target } = e;\n    let previous = target.previousElementSibling;\n    if (previous && !previous.classList.contains('task_card')) {\n      previous = null;\n    }\n    let next = target.nextElementSibling;\n    if (next && !next.classList.contains('task_card')) {\n      next = null;\n    }\n\n    const targetList = target.closest('.task_list');\n    let container = targetList;\n\n    if (!targetList) {\n      previous = this.previousNeighbour;\n      next = this.nextNeighbour;\n      container = this.drag.parentNode;\n    } else if (targetList && !previous && !next) {\n      targetList.append(this.drag);\n    }\n\n    if (previous) {\n      container.insertBefore(this.drag, previous.nextSibling);\n    } else if (next) {\n      container.insertBefore(this.drag, next);\n    } else {\n      container.append(this.drag);\n    }\n\n    this.drag.classList.remove('drag');\n\n    if (this.placeholder && this.placeholder.parentNode) {\n      this.placeholder.parentNode.removeChild(this.placeholder);\n    }\n\n    this.drag = null;\n    this.placeholder = null;\n\n    document.documentElement.removeEventListener('mouseup', this.onMouseUp);\n    document.documentElement.removeEventListener('mouseover', this.onMouseMove);\n  }\n\n  onAddCardClick(e) {\n    if (e.button !== 0) return;\n    this.addCard();\n  }\n\n  addCard(textTask = undefined) {\n    const card = document.createElement('div');\n    card.classList.add('task_card');\n\n    const tmp = document.createElement('div');\n    tmp.classList.add('close_button_container');\n    card.append(tmp);\n\n    const closeButton = document.createElement('span');\n    closeButton.classList.add('close_button');\n    closeButton.innerText = '×';\n\n    closeButton.addEventListener('click', (e) => {\n      e.preventDefault();\n      card.remove();\n    });\n\n    tmp.append(closeButton);\n\n    const cardText = document.createElement('div');\n    cardText.classList.add('content_card');\n    if (!textTask) {\n      cardText.innerText = 'Нажмите карандаш для редактирования';\n    } else {\n      cardText.setAttribute('contenteditable', 'true');\n      cardText.innerText = textTask;\n    }\n\n    card.append(cardText);\n\n    const cardTextEdit = document.createElement('div');\n    cardTextEdit.classList.add('card_text_edit');\n    cardTextEdit.innerHTML = '<svg aria-hidden=\"true\" focusable=\"false\" class=\"octicon octicon-pencil\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M11.013 1.427a1.75 1.75 0 0 1 2.474 0l1.086 1.086a1.75 1.75 0 0 1 0 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 0 1-.927-.928l.929-3.25c.081-.286.235-.547.445-.758l8.61-8.61Zm.176 4.823L9.75 4.81l-6.286 6.287a.253.253 0 0 0-.064.108l-.558 1.953 1.953-.558a.253.253 0 0 0 .108-.064Zm1.238-3.763a.25.25 0 0 0-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 0 0 0-.354Z\"></path></svg>';\n    card.append(cardTextEdit);\n\n    cardTextEdit.addEventListener('click', () => {\n      if (cardText.getAttribute('contenteditable') === null) {\n        cardText.textContent = '';\n      }\n      cardText.setAttribute('contenteditable', 'true');\n      cardText.focus();\n    });\n\n    this.taskList.append(card);\n  }\n}\n","import Task from \"./Task\";\n\nconst container = document.querySelector(\".container\");\n\nconst tasks = container.querySelectorAll(\".task\");\nconst task1 = tasks[0];\n\nconst containerTasks = document.createElement(\"div\");\ncontainerTasks.classList.add(\"container-tasks\");\ntask1.append(containerTasks);\n\nconst tasksTodo = new Task(containerTasks, \"todo\");\n[\"Hello to Trello!\", \"This is a card.\", \"Click on a card to see what's behind it.\"].forEach(text => tasksTodo.addCard(text));\n\nconst tasksInProgress = new Task(containerTasks, \"in progress\");\n[\"Invite your team to this board using the Add Members button\", \"Drag people onto a card to indicate that they's responsible for it.\"].forEach(text => {\n  tasksInProgress.addCard(text);\n});\n\nconst tasksDone = new Task(containerTasks, \"done\");\n[\"To learn more tricks, check out the guide.\"].forEach(text => tasksDone.addCard(text));\n"],"names":["Task","constructor","container","headerText","this","tasks","document","createElement","classList","add","append","header","tasksHeaderText","textContent","optionsBtn","taskList","addedCard","addEventListener","e","onAddCardClick","onMouseDownTask","drag","startX","startY","preventDefault","button","actualElement","target","contains","rect","getBoundingClientRect","clientX","left","clientY","top","previousNeighbour","previousElementSibling","nextNeighbour","nextElementSibling","placeholder","style","width","offsetWidth","height","offsetHeight","parentNode","insertBefore","onMouseUp","bind","onMouseMove","documentElement","posX","posY","nextSibling","undefined","previous","next","targetList","closest","remove","removeChild","removeEventListener","addCard","textTask","arguments","length","card","tmp","closeButton","innerText","cardText","setAttribute","cardTextEdit","innerHTML","getAttribute","focus","task1","querySelector","querySelectorAll","containerTasks","tasksTodo","forEach","text","tasksInProgress","tasksDone"],"sourceRoot":""}